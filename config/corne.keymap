/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

// My own includes 
// #include "en-combos.dtsi"
#include "en-macros.dtsi"
#include "accents.dtsi"
#include "en-behaviors.dtsi"

// Shortcuts
#define HYPER LC(LS(LA(LGUI)))

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB  |  Q  |  W  |  E       |     R    |  T  |   |  Y  |    U    |  I        |  O  |  P  | BSPC |
            // | SHIFT |  A  |  S  |  D       |     F    |  G  |   |  H  |    J    |  K        |  L  |  +  |DELETE|
            // | ALT   |  Z  |  X  |  C       |     V    |  B  |   |  N  |    M    |  ,        |  .  |  -  | GUI  |
            //                     | CTRL,ESC | LWR,CAPS |SPACE|   |ENTER|RSE,PRINT|  SHIFT    |

            bindings = <
&kp TAB      &kp Q  &kp W  &kp E     &kp R       &kp T             &kp Y      &kp U              &kp I           &kp O    &kp P      &kp BSPC
&kp LSHIFT   &kp A  &kp S  &kp D     &kp F       &kp G             &kp H      &kp J              &kp K           &kp L    &kp PLUS   &kp DEL
&kp LEFT_ALT &kp Z  &kp X  &kp C     &kp V       &kp B             &kp N      &kp M              &kp COMMA       &kp DOT  &kp MINUS  &kp LGUI
                    &mt LCTRL ESCAPE &lt 2 CAPS  &kp SPACE  &kp ENTER  &lt 1 PRINTSCREEN  &kp LSHFT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // | MUTE |  1   |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // |BRI+  | VOL+ |  <  |  >  |     |PGUP |   |LEFT |DOWN | UP  |RGT  |  *  |BTCLR |
            // |BRI-  | VOL- |     |     |END  |PGDN |   |     |     |  ;  |  :  |  _  |BTNXT |
            //                     |     |     |     |   |     |     |     |

            bindings = <
&kp C_MUTE            &kp N1             &kp N2         &kp N3            &kp N4   &kp N5           &kp N6    &kp N7    &kp N8         &kp N9     &kp N0          &kp BSPC
&kp C_BRI_UP          &kp C_VOLUME_UP    &kp LESS_THAN  &kp GREATER_THAN  &trans   &kp PAGE_UP      &kp LEFT  &kp DOWN  &kp UP         &kp RIGHT  &kp ASTERISK    &bt BT_CLR
&kp C_BRIGHTNESS_DEC  &kp C_VOLUME_DOWN  &trans         &trans            &kp END  &kp PAGE_DOWN    &trans    &trans    &kp SEMICOLON  &kp COLON  &kp UNDERSCORE  &bt BT_NXT
                                                        &trans            &trans   &trans           &trans    &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  "|" |  !  |  "  |  #  |  $  |  %  |   |  &  |  /  |  (  |  )  |  =  | BSPC |
            // | CTRL |  ?  |  à  |  è  |  é  |  ì  |   |  '  |     |  [  |  ]  |  @  |  `   |
            // | SHFT |  ^  |  ò  |  ù  |     |     |   |     |     |  {  |  }  |  #  |  ~   |
            //                    |     |     |     |   |     |     |     |

            bindings = <
&kp PIPE          &kp BACKSLASH  &kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp DLLR  &kp PRCNT    &kp AMPERSAND  &kp SLASH  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL    &kp BSPC
&kp LCTRL         &kt QUESTION   &ac_agrv         &ac_egrv           &e_ac     &ac_igrv     &kp APOS       &trans     &kp LBKT              &kp RBKT               &kp AT_SIGN  &kp GRAVE
&mt LSHFT ESCAPE  &kp CARET      &ac_ogrv         &ac_ugrv           &trans    &trans       &trans         &trans     &kp LBRC              &kp RBRC               &kp HASH     &kp TILDE
                                                  &kp LGUI           &trans    &trans       &trans         &trans     &trans
            >;
        };
    };
};